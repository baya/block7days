dbj_pack_objs = debug_beej_pack.o beej_pack.o
btc_ver_objs = btc_version.o beej_pack.o kyk_sha.o kyk_socket.o
i_paths = /usr/local/opt/openssl/include
l_paths = /usr/local/opt/openssl/lib

debug_beej_pack.out: $(dbj_pack_objs)
	gcc -o debug_beej_pack.out $(dbj_pack_objs)
debug_beej_pack.o: debug_beej_pack.c beej_pack.h
	gcc -c debug_beej_pack.c

btc_version.out: $(btc_ver_objs)
	gcc -o btc_version.out $(btc_ver_objs) -L$(l_paths) -lcrypto

beej_pack.o: beej_pack.c beej_pack.h
	gcc -c beej_pack.c

kyk_sha.o: kyk_sha.c kyk_sha.h
	gcc -c kyk_sha.c -I$(i_paths)

kyk_socket.o: kyk_socket.c kyk_socket.h btc_message.h
	gcc -c kyk_socket.c

btc_version.o: btc_version.c beej_pack.h kyk_sha.h btc_message.h kyk_socket.h
	gcc -c btc_version.c -I$(i_paths)

debug_hashblock.out: debug_hashblock.o kyk_sha.o
	cc -o debug_hashblock.out debug_hashblock.o kyk_sha.o -L$(l_paths) -lcrypto

debug_hashblock.o: debug_hashblock.c kyk_sha.h
	cc -c debug_hashblock.c -I$(i_paths)


clean:
	rm debug_beej_pack.out $(dbj_pack_objs) $(btc_ver_objs)